<!doctype html>
<html lang="en" data-bs-theme="dark">
<head>
    <%- include('snippets/head.ejs'); %>
    <link href="assets/custom/css/index.css" rel="stylesheet">
    <script async defer src="https://buttons.github.io/buttons.js"></script>
</head>
<body>

<main>
    <div class="container py-4">
        <header class="pb-3 mb-4 border-bottom d-flex justify-content-between">
            <a href="/" class="text-body-emphasis text-decoration-none">
                <span class="fs-4">Host My Shit</span>
            </a>
            <a class="github-button" href="https://github.com/VictoriqueMoe/hostMyShit"
               data-color-scheme="no-preference: dark; light: light; dark: dark;"
               data-size="large"
               aria-label="Star VictoriqueMoe/hostMyShit on GitHub">Source</a>
        </header>

        <div class="p-5 mb-4 bg-body-tertiary rounded-3 border border-primary-subtle position-relative">
            <div class="container-fluid py-5 ">
                <h1 class="display-5 fw-bold">No BS temp file hosting</h1>
                <p class="col-md-8 fs-4">hostMyShit is a temporary file hosting service that allows for file uploads that are hosted for a set amount of time.</p>
                <a class="btn btn-primary btn-lg" type="button" href="/api-docs" target="_blank">Api Documentation</a>
                <img id="victorique" class="img-fluid" src="assets/custom/images/08.png"/>
            </div>
        </div>

        <div class="row align-items-md-stretch mb-4">
            <div class="col-md-4">
                <div class="card text-center border-0">
                    <i class="bi bi-rocket-takeoff"></i>
                    <div class="card-body">
                        <h5 class="card-title">Fast</h5>
                        <p class="card-text">
                            Through the use of ETags and efficient caching, rapid file access and upload.
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-center border-0">
                    <i class="bi bi-lock"></i>
                    <div class="card-body text-center">
                        <h5 class="card-title">Secure?</h5>
                        <p class="card-text">
                            You are in control of who can read your files.
                            Each file is protected with a unique token, only known to the uploader.
                        </p>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-center border-0">
                    <i class="bi bi-clock-history"></i>
                    <div class="card-body text-center">
                        <h5 class="card-title">Temporary?</h5>
                        <p class="card-text">
                            All files uploaded are temporary, and will be deleted once their allotted lifespan expires.
                            Shorter lifespans can be specified at upload.
                        </p>
                    </div>
                </div>
            </div>
        </div>

        <div class="row align-items-md-stretch mb-4">
            <div class="col-md-6">
                <div class="h-100 p-5 text-bg-dark rounded-3 border border-danger-subtle bg-body-tertiary">
                    <h2>Restrictions</h2>
                    <p>The following cannot be uploaded, and any uploads in violation of this will be IP banned</p>
                    <ul class="list-group mb-4 mt-4">
                        <li class="list-group-item">Piracy</li>
                        <li class="list-group-item">Extremist material</li>
                        <li class="list-group-item">Malware</li>
                        <li class="list-group-item">Crypto shit</li>
                        <li class="list-group-item">Anything illegal under British Law</li>
                        <li class="list-group-item">File Limit: <%- process.env.FILE_SIZE_UPLOAD_LIMIT_MB; -%>MB</li>
                        <li class="list-group-item">Blocked MIME types:
                            <ul>
                                <% for(const blockedMime of process.env.BLOCKED_MIME_TYPES.split(",")){ %>
                                    <li><%- blockedMime; -%></li>
                                <% } %>
                            </ul>
                        </li>
                    </ul>
                    <p>The amount of time a given file is hosted for is determined by its size. Files are hosted for a maximum of 365 days, with the time being shortened on a cubic curve.</p>
                    <p>This means for files up to about 50% of the maximum file size will get close to the maximum time. Beyond that, the time allotted drops off sharply, with the maximum size file getting about 5 minutes of hosting.</p>
                </div>
            </div>
            <div class="col-md-6">
                <div class="h-100 p-5  border border-info-subtle rounded-3">
                    <h2>Privacy Policy</h2>
                    <p>The following information about you is obtained for each upload</p>
                    <ul class="list-group mb-4 mt-4">
                        <li class="list-group-item">IP address</li>
                        <li class="list-group-item">User agent</li>
                    </ul>
                    <p>No data is shared with third parties, and data will be deleted permanently when the file expires or is deleted by the user</p>
                    <p>If we believe the release of this information is necessary to respond to a legal process, to investigate or
                        remedy potential violations of our policies, or to protect the rights, property, and safety of others,
                        we may share your information as permitted or required by any applicable law, rule, or regulation.</p>
                    <p>No uniform technology standard for recognising and implementing Do-Not-Track(DNT) signals has been finalised.
                        As such, we do not currently respond to DNT browser signals or any other mechanism that automatically
                        communicates your choice not to be tracked online.</p>
                    <p>We do not knowingly solicit information from children under the age of 13.</p>
                    <p>While we have taken reasonable steps to secure any information you provide to us, please be aware that despite our efforts,
                        no security measures are perfect or impenetrable. No method of data transmission can be guaranteed against any interception
                        or other type of misuse. Any information disclosed online is potentially vulnerable to interception and misuse by unauthorised parties.</p>
                </div>
            </div>
        </div>
        <div class="row align-items-md-stretch mb-4">
            <div class="col-md-12">
                <div class="h-100 p-5 text-bg-dark rounded-3 border border-success-subtle bg-body-tertiary">
                    <h2>Examples</h2>
                    <p>Please refer to the
                        <a href="/api-docs" target="_blank">Swagger</a> for full api documentation including endpoints and optional arguments you can pass.
                    </p>
                    <ul class="nav nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="curl-tab" data-bs-toggle="tab" data-bs-target="#curl-tab-pane" type="button" role="tab" aria-controls="curl-tab-pane" aria-selected="true">Curl</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="node-tab" data-bs-toggle="tab" data-bs-target="#node-tab-pane" type="button" role="tab" aria-controls="node-tab-pane" aria-selected="false">Node (node-fetch)</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="go-tab" data-bs-toggle="tab" data-bs-target="#go-tab-pane" type="button" role="tab" aria-controls="go-tab-pane" aria-selected="false">Go</button>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="curl-tab-pane" role="tabpanel" aria-labelledby="curl-tab" tabindex="0">
<pre><code class="language-curl">
// upload file via URL
curl --request PUT --url <%- process.env.BASE_URL; -%>/rest --data url=https://victorique.moe/img/slider/Quotes.jpg

// upload file via File
curl --request PUT --url <%- process.env.BASE_URL; -%>/rest --header 'Content-Type: multipart/form-data' --form file=@someFile.png
</code>
</pre>
                        </div>
                        <div class="tab-pane fade" id="node-tab-pane" role="tabpanel" aria-labelledby="node-tab" tabindex="0">
<pre><code class="language-ts">
import fetch, {fileFrom, FormData} from 'node-fetch';

// upload file
const formData = new FormData();
const blob = await fileFrom('./src/input.txt');
formData.set('file', blob);
const response = await fetch("<%- process.env.BASE_URL; -%>/rest", {
    method: 'PUT',
    body: formData
});
const data = await response.json(); // object

// upload via URL
const encodedParams = new URLSearchParams();
encodedParams.set('url', 'https://victorique.moe/img/slider/Quotes.jpg');
const response = await fetch("<%- process.env.BASE_URL; -%>/rest", {
    method: 'PUT',
    body: encodedParams
});
const data = await response.json(); // object
</code>
</pre>
                        </div>
                        <div class="tab-pane fade" id="go-tab-pane" role="tabpanel" aria-labelledby="go-tab" tabindex="0">
<pre><code class="language-go">
//upload via URL
package main

import (
	"bytes"
	"net/http"
)

func main() {
	url := "<%- process.env.BASE_URL; -%>/rest"
	data := []byte(`{"url": "https://victorique.moe/img/slider/Quotes.jpg"}`)
	req, _ := http.NewRequest(http.MethodPut, url, bytes.NewBuffer(data))
	req.Header.Set("Content-Type", "application/json")
	client := &http.Client{}
	resp, _ := client.Do(req)
	defer resp.Body.Close()
}

// upload file
package main

import (
	"bytes"
	"io"
	"mime/multipart"
	"net/http"
	"os"
	"path"
	"path/filepath"
)

func main() {
	fileDir, _ := os.Getwd()
	fileName := "main.go"
	filePath := path.Join(fileDir, fileName)

	file, _ := os.Open(filePath)
	defer file.Close()

	body := &bytes.Buffer{}
	writer := multipart.NewWriter(body)
	part, _ := writer.CreateFormFile("file", filepath.Base(file.Name()))
	io.Copy(part, file)
	writer.Close()

	r, _ := http.NewRequest("PUT", "<%- process.env.BASE_URL; -%>/rest", body)
	r.Header.Add("Content-Type", writer.FormDataContentType())
	client := &http.Client{}
	resp, err := client.Do(r)
	if err != nil {
		// handle error
	}
	defer resp.Body.Close()
}

</code>
</pre>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        <footer class="pt-3 mt-4 text-body-secondary border-top">
            &copy; Victoria
        </footer>
    </div>
</main>
<%- include('snippets/scripts.ejs'); %>
<script>hljs.highlightAll();</script>
</body>
</html>
